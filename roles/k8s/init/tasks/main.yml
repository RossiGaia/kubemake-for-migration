---
- name: install packages to use community.kubernetes collection
  block:
  - name: install python3-pip
    apt:
      name: python3-pip
      state: present
      update_cache: yes

  - name: install openshift python package
    pip:
      name: openshift
      state: present

- name: populate service facts
  service_facts:

- name: ensure kubelet is not running
  service_facts:
  until:
  - ansible_facts['services']['kubelet.service']['state'] != 'running'
  retries: 2
  delay: 5
  failed_when: false

# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/
- name: initialize control plane
  shell: >
    kubeadm init 
    --apiserver-advertise-address={{ apiserver_advertise_address }} 
    --pod-network-cidr={{ pod_network_cidr }}
    --cri-socket={{ cri_socket }}
    --apiserver-cert-extra-sans={{ apiserver_cert_extra_sans }}
  when:
  - ansible_facts['services']['kubelet.service']['state'] != 'running'

- name: create ~/.kube directory
  become: no
  file:
    path: $HOME/.kube
    state: directory

- name: copy /etc/kubernetes/admin.conf in ~/.kube
  copy:
    src: /etc/kubernetes/admin.conf
    remote_src: yes
    dest: /home/{{ ansible_user }}/.kube/config
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: set --node-ip in /etc/default/kubelet
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ kubelet_node_ip }}
    create: true

- name: restart kubelet service
  systemd:
    daemon_reload: yes
    name: kubelet
    state: restarted
